-- 테이블 순서는 관계를 고려하여 한 번에 실행해도 에러가 발생하지 않게 정렬되었습니다.

-- User Table Create SQL
-- 테이블 생성 SQL - User
CREATE TABLE User
(
    `userId`    INT            NOT NULL    AUTO_INCREMENT, 
    `name`      VARCHAR(45)    NULL, 
    `email`     VARCHAR(45)    NULL, 
    `password`  VARCHAR(45)    NULL, 
    `phone`     VARCHAR(45)    NULL, 
    `address`   VARCHAR(45)    NULL, 
    `imageURL`  TEXT           NULL, 
    `created`   TIMESTAMP      NULL, 
    `updated`   TIMESTAMP      NULL, 
    `status`    VARCHAR(20)    NULL, 
     PRIMARY KEY (userId)
);


-- postImage Table Create SQL
-- 테이블 생성 SQL - postImage
CREATE TABLE postImage
(
    `ImageId`   INT            NOT NULL    AUTO_INCREMENT, 
    `postId`    INT            NULL, 
    `imageURL`  TEXT           NULL, 
    `created`   TIMESTAMP      NULL, 
    `updated`   TIMESTAMP      NULL, 
    `status`    VARCHAR(20)    NULL, 
     PRIMARY KEY (ImageId)
);


-- category Table Create SQL
-- 테이블 생성 SQL - category
CREATE TABLE category
(
    `categoryId`  INT            NOT NULL    AUTO_INCREMENT, 
    `category`    VARCHAR(45)    NULL, 
    `created`     TIMESTAMP      NULL, 
    `updated`     TIMESTAMP      NULL, 
    `status`      VARCHAR(20)    NULL, 
     PRIMARY KEY (categoryId)
);


-- post Table Create SQL
-- 테이블 생성 SQL - post
CREATE TABLE post
(
    `postId`      INT            NOT NULL    AUTO_INCREMENT, 
    `userId`      INT            NULL, 
    `likeCount`   TINYINT        NULL, 
    `title`       VARCHAR(45)    NULL, 
    `content`     TEXT           NULL, 
    `created`     TIMESTAMP      NULL, 
    `updated`     TIMESTAMP      NULL, 
    `price`       INT            NULL, 
    `status`      VARCHAR(20)    NULL, 
    `categoryId`  INT            NULL, 
     PRIMARY KEY (postId)
);

-- Foreign Key 설정 SQL - post(userId) -> User(userId)
ALTER TABLE post
    ADD CONSTRAINT FK_post_userId_User_userId FOREIGN KEY (userId)
        REFERENCES User (userId) ON DELETE RESTRICT ON UPDATE RESTRICT;

-- Foreign Key 삭제 SQL - post(userId)
-- ALTER TABLE post
-- DROP FOREIGN KEY FK_post_userId_User_userId;

-- Foreign Key 설정 SQL - post(categoryId) -> category(categoryId)
ALTER TABLE post
    ADD CONSTRAINT FK_post_categoryId_category_categoryId FOREIGN KEY (categoryId)
        REFERENCES category (categoryId) ON DELETE RESTRICT ON UPDATE RESTRICT;

-- Foreign Key 삭제 SQL - post(categoryId)
-- ALTER TABLE post
-- DROP FOREIGN KEY FK_post_categoryId_category_categoryId;

-- Foreign Key 설정 SQL - post(postId) -> postImage(postId)
ALTER TABLE post
    ADD CONSTRAINT FK_post_postId_postImage_postId FOREIGN KEY (postId)
        REFERENCES postImage (postId) ON DELETE RESTRICT ON UPDATE RESTRICT;

-- Foreign Key 삭제 SQL - post(postId)
-- ALTER TABLE post
-- DROP FOREIGN KEY FK_post_postId_postImage_postId;


-- wishList Table Create SQL
-- 테이블 생성 SQL - wishList
CREATE TABLE wishList
(
    `wishListId`  INT            NOT NULL    AUTO_INCREMENT, 
    `userId`      INT            NULL, 
    `postId`      INT            NULL, 
    `created`     TIMESTAMP      NULL, 
    `updated`     TIMESTAMP      NULL, 
    `status`      VARCHAR(20)    NULL, 
     PRIMARY KEY (wishListId)
);

-- Foreign Key 설정 SQL - wishList(wishListId) -> User(userId)
ALTER TABLE wishList
    ADD CONSTRAINT FK_wishList_wishListId_User_userId FOREIGN KEY (wishListId)
        REFERENCES User (userId) ON DELETE RESTRICT ON UPDATE RESTRICT;

-- Foreign Key 삭제 SQL - wishList(wishListId)
-- ALTER TABLE wishList
-- DROP FOREIGN KEY FK_wishList_wishListId_User_userId;


